name: Build and Push

on:
  workflow_call:
    inputs:
      buildtag:
        required: false
        type: string
        default: 'latest'
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_PASSWORD:
        required: true
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Push
    concurrency: build-and-push

    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      # Prepare
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Login everywhere
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to Registry
        uses: docker/login-action@v2
        with:
          registry: registry.shanemcc.net
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Generate Tag list
      - name: Generate Tag list
        id: tags
        env:
          IMAGES: "docker.io/dfbnc/dfbnc ghcr.io/dfbnc/dfbnc registry.shanemcc.net/dfbnc-public/dfbnc"
          TAGS: "${{ inputs.buildtag }}"
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "TAGS<<$EOF" >> "$GITHUB_OUTPUT"
          for IMAGE in ${IMAGES}; do
            for TAG in ${TAGS}; do
              echo "${IMAGE}:${TAG}" >> "$GITHUB_OUTPUT"
            done;
          done;
          echo "$EOF" >> "$GITHUB_OUTPUT"

      # Build and push to each registry
      - name: Build using buildx
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          tags: ${{ steps.tags.outputs.TAGS }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          provenance: false

        # This ugly bit is necessary if you don't want your cache to grow forever
        # until it hits GitHub's limit of 5GB.
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
